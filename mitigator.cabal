Name:           mitigator
Version:        0.0.1
build-type:     Simple
License:        GPL
License-File:   LICENSE
Author:         HAILS team
Maintainer:	Deian Stefan  <deian at cs dot stanford dot edu>
Stability:      experimental
Synopsis:       General covert channel mitigator transformer
Category:       Security
Cabal-Version:  >= 1.6

Description:
  This library defines a basic interface for implementing covert
  channel mitigators (e.g., external timing mitigator, or storage
  mitigator). Concretely the library exposes a class 'Mitigator' and
  monad transformer 'MitM' (read \"mitigated monad\", or
  \"monad-in-the-middle\") that keeps the state of all mitigators.
  This allows users to mitigate different \"object\" independently.
  For example, one can build a mitigator per file-handle.
  "Mitigator.Time" implements this interface for time-mitigated
  handles and computations; "MIO.Handle" shows an implementation of
  the former used to mitigate writes to handles.

Library
  Build-Depends: base >= 4 && < 5,
                 bytestring >= 0.9 && < 1,
                 containers >= 0.4.2 && < 5,
                 unix >= 2.3 && < 3,
                 network >= 2.3 && < 3,
                 mtl >= 1.1.0.2 && < 3,
                 clock>=0.2.0.0 && < 0.3

  ghc-options: -Wall -threaded
  Exposed-modules:
    MonadConcur,
    Mitigator,
    Mitigator.Time,
    MIO.Handle
